// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Auth tables 
model User {
  id        String  @id
  firstName String
  lastName  String
  username  String  @unique
  email     String  @unique
  picture   String?
  sentRequests    FriendRequest[]  @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceivedRequests")
  friends         Friend[]         @relation("UserFriends")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FriendRequest {
  id         String   @id @default(cuid())
  sender     User     @relation("SentRequests", fields: [senderId], references: [id])
  senderId   String
  receiver   User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
  receiverId String
  status     RequestStatus
  createdAt  DateTime @default(now())

  @@unique([senderId, receiverId])
}

model Friend {
  id        String   @id @default(cuid())
  user      User     @relation("UserFriends", fields: [userId], references: [id])
  userId    String
  friendId  String   
  createdAt DateTime @default(now())

  @@unique([userId, friendId])
}

enum RequestStatus {
  PENDING
  ACCEPTED
  DECLINED
  BLOCKED
}